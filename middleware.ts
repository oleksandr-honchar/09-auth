import { NextResponse } from "next/server";
import type { NextRequest } from "next/server";

export function middleware(req: NextRequest) {
  const accessToken = req.cookies.get("accessToken")?.value;

  const { pathname } = req.nextUrl;

  const isPrivateRoute =
    pathname.startsWith("/profile") || pathname.startsWith("/notes");
  const isPublicRoute =
    pathname.startsWith("/sign-in") || pathname.startsWith("/sign-up");

  // üîí –Ø–∫—â–æ –Ω–µ–º–∞—î —Ç–æ–∫–µ–Ω–∞ ‚Üí —Ä–µ–¥—ñ—Ä–µ–∫—Ç –Ω–∞ –ª–æ–≥—ñ–Ω
  if (isPrivateRoute && !accessToken) {
    return NextResponse.redirect(new URL("/sign-in", req.url));
  }

  // üîë –Ø–∫—â–æ —î —Ç–æ–∫–µ–Ω —ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –π–¥–µ –Ω–∞ –ø—É–±–ª—ñ—á–Ω–∏–π –º–∞—Ä—à—Ä—É—Ç ‚Üí —Ä–µ–¥—ñ—Ä–µ–∫—Ç —É –ø—Ä–æ—Ñ—ñ–ª—å
  if (isPublicRoute && accessToken) {
    return NextResponse.redirect(new URL("/profile", req.url));
  }

  return NextResponse.next();
}

export const config = {
  matcher: ["/profile/:path*", "/notes/:path*", "/sign-in", "/sign-up"],
};
